name: Verify
on:
  pull_request:
  push:

env:
  GHC_VERSION: "9.2.5"

jobs:
  build-unix:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Haskell
        id: haskell-setup
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          enable-stack: true
          stack-no-global: true
      - name: Cache the Stack directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.haskell-setup.outputs.stack-root }}
          key: v1-${{ matrix.os }}-stack-${{ hashFiles('stack.yaml', 'package.yaml') }}
      - name: Install dependencies
        run: make deps
      - name: Build
        run: make ./out/build/debug/smoke
      - name: Upload Smoke
        uses: actions/upload-artifact@v3
        with:
          name: smoke-${{ matrix.os }}
          path: out/build/debug/smoke
      - name: Run unit tests
        run: make unit-test

  spec-unix:
    name: Spec
    needs: build-unix
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Download Smoke
        uses: actions/download-artifact@v3
        with:
          name: smoke-${{ matrix.os }}
      - name: Make Smoke executable
        run: chmod +x smoke
      - name: Spec
        run: ./smoke --command=./smoke spec

  build-test-nix:
    name: Build and Test with Nix
    runs-on: ubuntu-20.04
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
      - name: Set up the Nix cache
        uses: cachix/cachix-action@v12
        with:
          name: samirtalwar
      - name: Build and Test
        run: make out/build/nix/bin/smoke
      - name: Spec
        run: ./out/build/nix/bin/smoke --command=./out/build/nix/bin/smoke spec

  build-windows:
    name: Build (windows-latest)
    runs-on: windows-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Haskell
        id: haskell-setup
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ env.GHC_VERSION }}
          enable-stack: true
      - name: Cache the Stack directory
        uses: actions/cache@v3
        with:
          path: ${{ steps.haskell-setup.outputs.stack-root }}
          key: v1-windows-latest-stack-${{ hashFiles('stack.yaml', 'package.yaml') }}
      - name: Install Haskell
        run: "stack --no-terminal setup"
      - name: Update MSYS2
        run: |
          stack --no-terminal exec -- pacman --noconfirm -Sy msys2-keyring
          stack --no-terminal exec -- pacman --noconfirm -Syuu
      - name: Build
        run: 'stack --no-terminal install --fast --test --no-run-tests --local-bin-path=.\out\build\debug'
      - name: Upload Smoke
        uses: actions/upload-artifact@v3
        with:
          name: smoke-windows-latest
          path: 'out\build\debug\smoke.exe'
      - name: Run unit tests
        run: "stack --no-terminal test"

  spec-windows:
    name: Spec (windows-latest)
    needs: build-windows
    runs-on: windows-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Download Smoke
        uses: actions/download-artifact@v3
        with:
          name: smoke-windows-latest
      - name: Spec
        run: '.\smoke.exe --command=.\smoke.exe spec'

  lint:
    name: Lint
    needs: build-unix
    runs-on: ubuntu-20.04
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v18
      - name: Set up the Nix cache
        uses: cachix/cachix-action@v12
        with:
          name: samirtalwar
      - name: Lint
        run: nix develop .#lint --command make lint
